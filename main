import os, glob
import numpy as np, librosa, librosa.display, matplotlib.pyplot as plt

in_dir  = "sounds"
out_dir = "figures"
os.makedirs(out_dir, exist_ok=True)

hop, n_fft = 1024, 2048
low, high  = 150, 780          # howl fundamental range (Hz)

for wav in glob.glob(os.path.join(in_dir, "*.wav")):
    y, sr = librosa.load(wav, sr=22050, mono=True)
    S     = np.abs(librosa.stft(y, n_fft=n_fft, hop_length=hop))
    f     = librosa.fft_frequencies(sr=sr, n_fft=n_fft)

    howl_energy = S[(f >= low) & (f <= high)].mean(axis=0)
    mask = howl_energy > howl_energy.mean() + 2*howl_energy.std()
    idx  = np.where(mask)[0]
    groups = np.split(idx, np.where(np.diff(idx) > 1)[0] + 1)
    events = [(g[0]*hop/sr, g[-1]*hop/sr) for g in groups if len(g)]

    plt.figure(figsize=(10,4))
    librosa.display.specshow(librosa.amplitude_to_db(S, ref=np.max),
                             sr=sr, hop_length=hop, x_axis='time', y_axis='linear')
    for t0, t1 in events:
        plt.axvspan(t0, t1, color='r', alpha=0.3)
    plt.title(f"{os.path.basename(wav)} â€“ howl candidates")
    plt.tight_layout()
    out_png = os.path.join(out_dir, os.path.splitext(os.path.basename(wav))[0] + "_analysis.png")
    plt.savefig(out_png)
    plt.close()
